#!/bin/bash

TARGET_DIR=$1

if [[ "$TARGET_DIR" = "" ]] ; then
	echo Please indicate the target dir
	echo Usage: $0 TARGET_DIR
	exit 1
fi
if [[ ! -d $TARGET_DIR ]] ; then
	echo Target dir does not exist
	exit 2
fi


if [[ "$2" = "-d" ]] ; then
        echo Debugging mode
	DEBUG_MODE=1
else
	DEBUG_MODE=0
fi


echo Cleans old backup and keeps only monthly backup if they are older than one month

CURRENT_DATE=$(date +%Y%m%d%H%M%S)
CURRENT_YEAR=$(date +%Y)
CURRENT_MONTH=$(date +%m)
CURRENT_DATE_AS_DAY=$(date +%Y%m%d)

MONTH_DURATION_IN_SECS=$((31*24*3600))
echo $MONTH_DURATION_IN_SECS
CURRENT_EPOCH=$(date +%s)


eraseFiles(){
	pattern=$1
	delay=$2
	ls $TARGET_DIR/*$pattern* > /dev/null 2>&1
	if [[ "$?" != "0" ]] ; then
		return 0
	fi
	echo Delay is $delay
	echo Erase $TARGET_DIR/*$pattern*
	if [[ "$DEBUG_MODE" = "0" ]] ; then
		rm $TARGET_DIR/*$pattern*
	else
		echo $TARGET_DIR/*$pattern*
	fi
	
}


for (( theyear=2014; theyear<=$CURRENT_YEAR; theyear++ )) ; do
	for themonth in {01..12} ; do 
		for theday in {01..31} ; do
			TARGET_EPOCH=$(date --date="$theyear-$themonth-$theday" +%s 2> /dev/null)
			is_valid_day=$?
			if [[ "$is_valid_day" == "0" ]] ; then

				(( delay_in_seconds = $CURRENT_EPOCH - $TARGET_EPOCH ))
				delay_in_day=$(($delay_in_seconds / 3600 / 24 ))
				if (( $delay_in_day > 31  )) ; then
					if (( $delay_in_day < 365 )) ; then
						if [[ "$theday" != "01" ]]; then
							eraseFiles $theyear$themonth$theday $delay_in_day
						fi
					else
						if [[ "$themonth$theday" != "0101"  ]]; then
                                                        eraseFiles $theyear$themonth$theday $delay_in_day
                                                fi
					fi
				fi
			fi
		done 
	done
done

